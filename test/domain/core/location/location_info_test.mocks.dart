// Mocks generated by Mockito 5.0.17 from annotations
// in shopify_manager/test/domain/core/location/location_info_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:geocoding_platform_interface/src/geocoding_platform_interface.dart'
    as _i2;
import 'package:geocoding_platform_interface/src/models/models.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [GeocodingPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeocodingPlatform extends _i1.Mock implements _i2.GeocodingPlatform {
  MockGeocodingPlatform() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Location>> locationFromAddress(String? address,
          {String? localeIdentifier}) =>
      (super.noSuchMethod(
              Invocation.method(#locationFromAddress, [address],
                  {#localeIdentifier: localeIdentifier}),
              returnValue: Future<List<_i4.Location>>.value(<_i4.Location>[]))
          as _i3.Future<List<_i4.Location>>);
  @override
  _i3.Future<List<_i4.Placemark>> placemarkFromCoordinates(
          double? latitude, double? longitude, {String? localeIdentifier}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #placemarkFromCoordinates,
                  [latitude, longitude],
                  {#localeIdentifier: localeIdentifier}),
              returnValue: Future<List<_i4.Placemark>>.value(<_i4.Placemark>[]))
          as _i3.Future<List<_i4.Placemark>>);
}
