// Mocks generated by Mockito 5.1.0 from annotations
// in shopify_domain/test/src/favourites/firebase_favouirtes_facade_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:cloud_functions/cloud_functions.dart' as _i4;
import 'package:cloud_functions_platform_interface/cloud_functions_platform_interface.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i5;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shopify_domain/auth/auth_failure.dart' as _i10;
import 'package:shopify_domain/auth/shopify_auth.dart' as _i8;
import 'package:shopify_domain/auth/user.dart' as _i9;
import 'package:shopify_domain/auth/value_objects.dart' as _i11;
import 'package:shopify_domain/core/network/network_info.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFirebaseApp_0 extends _i1.Fake implements _i2.FirebaseApp {}

class _FakeFirebaseFunctionsPlatform_1 extends _i1.Fake
    implements _i3.FirebaseFunctionsPlatform {}

class _FakeHttpsCallable_2 extends _i1.Fake implements _i4.HttpsCallable {}

class _FakeHttpsCallablePlatform_3 extends _i1.Fake
    implements _i3.HttpsCallablePlatform {}

class _FakeHttpsCallableResult_4<T> extends _i1.Fake
    implements _i4.HttpsCallableResult<T> {}

class _FakeOption_5<A> extends _i1.Fake implements _i5.Option<A> {}

class _FakeEither_6<L, R> extends _i1.Fake implements _i5.Either<L, R> {}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
}

/// A class which mocks [FirebaseFunctions].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFunctions extends _i1.Mock implements _i4.FirebaseFunctions {
  MockFirebaseFunctions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(Invocation.getter(#app),
      returnValue: _FakeFirebaseApp_0()) as _i2.FirebaseApp);
  @override
  _i3.FirebaseFunctionsPlatform get delegate =>
      (super.noSuchMethod(Invocation.getter(#delegate),
              returnValue: _FakeFirebaseFunctionsPlatform_1())
          as _i3.FirebaseFunctionsPlatform);
  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(Invocation.getter(#pluginConstants),
          returnValue: <dynamic, dynamic>{}) as Map<dynamic, dynamic>);
  @override
  _i4.HttpsCallable httpsCallable(String? name,
          {_i3.HttpsCallableOptions? options}) =>
      (super.noSuchMethod(
          Invocation.method(#httpsCallable, [name], {#options: options}),
          returnValue: _FakeHttpsCallable_2()) as _i4.HttpsCallable);
  @override
  void useFunctionsEmulator(String? host, int? port) =>
      super.noSuchMethod(Invocation.method(#useFunctionsEmulator, [host, port]),
          returnValueForMissingStub: null);
}

/// A class which mocks [HttpsCallable].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpsCallable extends _i1.Mock implements _i4.HttpsCallable {
  MockHttpsCallable() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.HttpsCallablePlatform get delegate =>
      (super.noSuchMethod(Invocation.getter(#delegate),
              returnValue: _FakeHttpsCallablePlatform_3())
          as _i3.HttpsCallablePlatform);
  @override
  _i7.Future<_i4.HttpsCallableResult<T>> call<T>([dynamic parameters]) =>
      (super.noSuchMethod(Invocation.method(#call, [parameters]),
              returnValue: Future<_i4.HttpsCallableResult<T>>.value(
                  _FakeHttpsCallableResult_4<T>()))
          as _i7.Future<_i4.HttpsCallableResult<T>>);
}

/// A class which mocks [ShopifyAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockShopifyAuth extends _i1.Mock implements _i8.ShopifyAuth {
  MockShopifyAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.Option<_i9.ShopifyUser>> getSignedInUser() =>
      (super.noSuchMethod(Invocation.method(#getSignedInUser, []),
              returnValue: Future<_i5.Option<_i9.ShopifyUser>>.value(
                  _FakeOption_5<_i9.ShopifyUser>()))
          as _i7.Future<_i5.Option<_i9.ShopifyUser>>);
  @override
  _i7.Future<_i5.Either<_i10.AuthFailure, _i5.Unit>>
      registerWithEmailAndPassword(
              {_i11.EmailAddress? emailAddress, _i11.Password? password}) =>
          (super.noSuchMethod(
              Invocation.method(#registerWithEmailAndPassword, [],
                  {#emailAddress: emailAddress, #password: password}),
              returnValue: Future<_i5.Either<_i10.AuthFailure, _i5.Unit>>.value(
                  _FakeEither_6<_i10.AuthFailure, _i5.Unit>())) as _i7
              .Future<_i5.Either<_i10.AuthFailure, _i5.Unit>>);
  @override
  _i7.Future<_i5.Either<_i10.AuthFailure, _i5.Unit>> signInWithEmailAndPassword(
          {_i11.EmailAddress? emailAddress, _i11.Password? password}) =>
      (super.noSuchMethod(
              Invocation.method(#signInWithEmailAndPassword, [],
                  {#emailAddress: emailAddress, #password: password}),
              returnValue: Future<_i5.Either<_i10.AuthFailure, _i5.Unit>>.value(
                  _FakeEither_6<_i10.AuthFailure, _i5.Unit>()))
          as _i7.Future<_i5.Either<_i10.AuthFailure, _i5.Unit>>);
  @override
  _i7.Future<_i5.Either<_i10.AuthFailure, _i5.Unit>> signInWithGoogle() =>
      (super.noSuchMethod(Invocation.method(#signInWithGoogle, []),
              returnValue: Future<_i5.Either<_i10.AuthFailure, _i5.Unit>>.value(
                  _FakeEither_6<_i10.AuthFailure, _i5.Unit>()))
          as _i7.Future<_i5.Either<_i10.AuthFailure, _i5.Unit>>);
  @override
  _i7.Future<void> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
}

/// A class which mocks [HttpsCallableResult].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpsCallableResultString extends _i1.Mock
    implements _i4.HttpsCallableResult<String> {
  MockHttpsCallableResultString() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get data =>
      (super.noSuchMethod(Invocation.getter(#data), returnValue: '') as String);
}
