// Mocks generated by Mockito 5.1.0 from annotations
// in shopify_client/test/infrastructure/shop/shop_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i12;

import 'package:dartz/dartz.dart' as _i2;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i10;
import 'package:kt_dart/kt.dart' as _i14;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shopify_domain/auth/user.dart' as _i9;
import 'package:shopify_domain/core/address.dart' as _i5;
import 'package:shopify_domain/core/failures.dart' as _i16;
import 'package:shopify_domain/core/images/photo.dart' as _i15;
import 'package:shopify_domain/core/location/location.dart' as _i6;
import 'package:shopify_domain/core/value_objects.dart' as _i3;
import 'package:shopify_domain/shop/shop.dart' as _i8;
import 'package:shopify_domain/shop/shop_failure.dart' as _i13;
import 'package:shopify_domain/shop/shopify_shop_repository.dart' as _i11;
import 'package:shopify_domain/shop/time/week.dart' as _i7;
import 'package:shopify_domain/shop/value_objects.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeOption_1<A> extends _i1.Fake implements _i2.Option<A> {}

class _FakeUniqueId_2 extends _i1.Fake implements _i3.UniqueId {}

class _FakeShopName_3 extends _i1.Fake implements _i4.ShopName {}

class _FakeAddress_4 extends _i1.Fake implements _i5.Address {}

class _FakeLocation_5 extends _i1.Fake implements _i6.Location {}

class _FakeWeek_6 extends _i1.Fake implements _i7.Week {}

class _FakeShopifyUrl_7 extends _i1.Fake implements _i3.ShopifyUrl {}

class _Fake$ShopCopyWith_8<$Res> extends _i1.Fake
    implements _i8.$ShopCopyWith<$Res> {}

class _Fake$ShopifyUserCopyWith_9<$Res> extends _i1.Fake
    implements _i9.$ShopifyUserCopyWith<$Res> {}

class _FakeLatLng_10 extends _i1.Fake implements _i10.LatLng {}

class _Fake$LocationCopyWith_11<$Res> extends _i1.Fake
    implements _i6.$LocationCopyWith<$Res> {}

/// A class which mocks [ShopifyShopRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockShopifyShopRepository extends _i1.Mock
    implements _i11.ShopifyShopRepository {
  MockShopifyShopRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Stream<_i2.Either<_i13.ShopFailure, _i14.KtList<_i8.Shop>>> watchAll() =>
      (super.noSuchMethod(Invocation.method(#watchAll, []),
              returnValue: Stream<
                  _i2.Either<_i13.ShopFailure, _i14.KtList<_i8.Shop>>>.empty())
          as _i12.Stream<_i2.Either<_i13.ShopFailure, _i14.KtList<_i8.Shop>>>);
  @override
  _i12.Stream<_i2.Either<_i13.ShopFailure, _i14.KtList<_i8.Shop>>> watchNearby(
          _i6.Location? location, double? radius) =>
      (super.noSuchMethod(Invocation.method(#watchNearby, [location, radius]),
              returnValue: Stream<
                  _i2.Either<_i13.ShopFailure, _i14.KtList<_i8.Shop>>>.empty())
          as _i12.Stream<_i2.Either<_i13.ShopFailure, _i14.KtList<_i8.Shop>>>);
  @override
  _i12.Stream<_i2.Either<_i13.ShopFailure, _i14.KtList<_i8.Shop>>>
      watchYourShops() => (super.noSuchMethod(
              Invocation.method(#watchYourShops, []),
              returnValue: Stream<
                  _i2.Either<_i13.ShopFailure, _i14.KtList<_i8.Shop>>>.empty())
          as _i12.Stream<_i2.Either<_i13.ShopFailure, _i14.KtList<_i8.Shop>>>);
  @override
  _i12.Future<_i2.Either<_i13.ShopFailure, _i2.Unit>> create(
          _i8.Shop? shop, _i15.ShopLogo? logo, _i9.ShopifyUser? user) =>
      (super.noSuchMethod(Invocation.method(#create, [shop, logo, user]),
              returnValue: Future<_i2.Either<_i13.ShopFailure, _i2.Unit>>.value(
                  _FakeEither_0<_i13.ShopFailure, _i2.Unit>()))
          as _i12.Future<_i2.Either<_i13.ShopFailure, _i2.Unit>>);
  @override
  _i12.Future<_i2.Either<_i13.ShopFailure, _i2.Unit>> update(_i8.Shop? shop) =>
      (super.noSuchMethod(Invocation.method(#update, [shop]),
              returnValue: Future<_i2.Either<_i13.ShopFailure, _i2.Unit>>.value(
                  _FakeEither_0<_i13.ShopFailure, _i2.Unit>()))
          as _i12.Future<_i2.Either<_i13.ShopFailure, _i2.Unit>>);
  @override
  _i12.Future<_i2.Either<_i13.ShopFailure, _i2.Unit>> delete(_i8.Shop? shop) =>
      (super.noSuchMethod(Invocation.method(#delete, [shop]),
              returnValue: Future<_i2.Either<_i13.ShopFailure, _i2.Unit>>.value(
                  _FakeEither_0<_i13.ShopFailure, _i2.Unit>()))
          as _i12.Future<_i2.Either<_i13.ShopFailure, _i2.Unit>>);
}

/// A class which mocks [Shop].
///
/// See the documentation for Mockito's code generation for more information.
class MockShop extends _i1.Mock implements _i8.Shop {
  MockShop() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Option<_i16.ValueFailure<dynamic>> get failureOption =>
      (super.noSuchMethod(Invocation.getter(#failureOption),
              returnValue: _FakeOption_1<_i16.ValueFailure<dynamic>>())
          as _i2.Option<_i16.ValueFailure<dynamic>>);
  @override
  _i3.UniqueId get id => (super.noSuchMethod(Invocation.getter(#id),
      returnValue: _FakeUniqueId_2()) as _i3.UniqueId);
  @override
  _i4.ShopName get shopName => (super.noSuchMethod(Invocation.getter(#shopName),
      returnValue: _FakeShopName_3()) as _i4.ShopName);
  @override
  _i5.Address get address => (super.noSuchMethod(Invocation.getter(#address),
      returnValue: _FakeAddress_4()) as _i5.Address);
  @override
  _i6.Location get location => (super.noSuchMethod(Invocation.getter(#location),
      returnValue: _FakeLocation_5()) as _i6.Location);
  @override
  _i7.Week get workingWeek =>
      (super.noSuchMethod(Invocation.getter(#workingWeek),
          returnValue: _FakeWeek_6()) as _i7.Week);
  @override
  _i3.ShopifyUrl get logoUrl => (super.noSuchMethod(Invocation.getter(#logoUrl),
      returnValue: _FakeShopifyUrl_7()) as _i3.ShopifyUrl);
  @override
  _i8.$ShopCopyWith<_i8.Shop> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$ShopCopyWith_8<_i8.Shop>())
          as _i8.$ShopCopyWith<_i8.Shop>);
}

/// A class which mocks [ShopifyUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockShopifyUser extends _i1.Mock implements _i9.ShopifyUser {
  MockShopifyUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.UniqueId get id => (super.noSuchMethod(Invocation.getter(#id),
      returnValue: _FakeUniqueId_2()) as _i3.UniqueId);
  @override
  _i9.$ShopifyUserCopyWith<_i9.ShopifyUser> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$ShopifyUserCopyWith_9<_i9.ShopifyUser>())
          as _i9.$ShopifyUserCopyWith<_i9.ShopifyUser>);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}

/// A class which mocks [Location].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocation extends _i1.Mock implements _i6.Location {
  MockLocation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.LatLng get latLng => (super.noSuchMethod(Invocation.getter(#latLng),
      returnValue: _FakeLatLng_10()) as _i10.LatLng);
  @override
  double get latitude =>
      (super.noSuchMethod(Invocation.getter(#latitude), returnValue: 0.0)
          as double);
  @override
  double get longitude =>
      (super.noSuchMethod(Invocation.getter(#longitude), returnValue: 0.0)
          as double);
  @override
  String get geohash =>
      (super.noSuchMethod(Invocation.getter(#geohash), returnValue: '')
          as String);
  @override
  _i6.$LocationCopyWith<_i6.Location> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$LocationCopyWith_11<_i6.Location>())
          as _i6.$LocationCopyWith<_i6.Location>);
}
